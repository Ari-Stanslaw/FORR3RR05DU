1) Quick Sort
static void Main(string[] args)
{
    private static void Quick_Sort(int[] arr, int left, int right)
        {
            if (left < right)
            {
                int pivot = Partition(arr, left, right);

                if (pivot > 1)
                {
                    Quick_Sort(arr, left, pivot - 1);
                }
                if (pivot + 1 < right)
                {
                    Quick_Sort(arr, pivot + 1, right);
                }
            }

        }
        private static int Partition(int[] arr, int left, int right)
        {
            int pivot = arr[left];
            while (true)
            {
                while (arr[left] < pivot)
                {
                    left++;
                }
                while (arr[right] > pivot)
                {
                    right--;
                }
                if (left < right)
                {
                    int temp = arr[left];
                    arr[left] = arr[right];
                    arr[right] = temp;

                    if (arr[left] == arr[right])
                        left++;
                }
                else
                {
                    return right;
                }
            }
        }
        static void Main(string[] args)
        {
            int[] arr = new int[] { 2, 5, -4, 11, 0, 18, 2, 67, 51, 6 };

            Console.WriteLine("Original array : ");
            foreach (var item in arr)
            {
                Console.Write(" " + item);
            }
            Console.WriteLine();

            Quick_Sort(arr, 0, arr.Length - 1);

            Console.WriteLine();
            Console.WriteLine("Sorted array : ");

            foreach (var item in arr)
            {
                Console.Write(" " + item);
            }
            Console.WriteLine();
            Console.ReadLine();
        }
}
        
         
2) DNA String
static void Main(string[] args)
        {
            string name = "AGCTTTTCATTCTGACTGCAACGGGCAATATGTCTCTGTGTGGATTAAAAAAAGAGTGTCTGATAGCAGC";
                var tempLetter = "";
                string arrangedName = "";
                List<string> ListLetters = new List<string>(); //we use the advantage of generics for a mutable version of array.
                arrangedName = "";
                for (int i = 0; i < name.Length; i++)
                {
                    ListLetters.Add(name.Substring(i, 1)); //limit the string to 1 so that its convertible to character.
                }
                for (int i = 0; i < name.Length; i++)
                {
                    for (int j = i; j < name.Length; j++)
                    {
                        if (char.Parse(ListLetters[i]) > char.Parse(ListLetters[j]))
                        {
                            tempLetter = ListLetters[i];
                            ListLetters[i] = ListLetters[j];
                            ListLetters[j] = tempLetter;
                        }
                    }
                }
                foreach (var listLetter in ListLetters)
                {
                    arrangedName += listLetter;
                }
            Console.WriteLine("Original: ");
            Console.WriteLine(name);
            Console.WriteLine();
            Console.WriteLine("Arranged: ");
            Console.WriteLine(arrangedName);
            Console.ReadLine();
        }

3)Búðarkassi 2
static void Main(string[] args)
        {
            string again = null;
            string item = null;
            do
            {
                Console.WriteLine("Type the price and amount(amount,price):");
                item = Console.ReadLine();
                string[] info = item.Split(' ');

                int num1 = Int32.Parse(info[0]);
                int num2 = Int32.Parse(info[1]);
                Console.WriteLine();

                int result = 0;
                for (int i = 0; i < num2; i++)
                {
                    int temp = result + num1;
                    result = temp;
                }
                Console.WriteLine("Price is: " + result);

                Console.WriteLine();
                Console.WriteLine("Want to add another item?(y/n):");
                again = Console.ReadLine();
                Console.Clear();
            } while (again != "n");
        }
